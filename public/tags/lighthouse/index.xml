<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lighthouse on morganwebdev&#39;s blog</title>
    <link>https://morganwebdev.org/tags/lighthouse/</link>
    <description>Recent content in Lighthouse on morganwebdev&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Morgan Murrah</copyright>
    <lastBuildDate>Mon, 12 Dec 2022 08:00:00 -0800</lastBuildDate><atom:link href="https://morganwebdev.org/tags/lighthouse/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Performance</title>
      <link>https://morganwebdev.org/posts/performance/</link>
      <pubDate>Mon, 12 Dec 2022 08:00:00 -0800</pubDate>
      
      <guid>https://morganwebdev.org/posts/performance/</guid>
      <description>Web Performance is good (and can be fun) An example Lighthouse score:
I have a growing interest in web performance. I get joy out of using web performance tools and hopefully getting a good score on the pages I work on. It is a little like working to get a gold star and then see your website perform out in the big world!
Performance matters on a big scale and small scale - Core Web Vitals is a ranking factor for Google SEO.</description>
    </item>
    
    <item>
      <title>Paring down with AMP</title>
      <link>https://morganwebdev.org/posts/paring-down-with-amp/</link>
      <pubDate>Sat, 21 May 2022 12:00:00 -0800</pubDate>
      
      <guid>https://morganwebdev.org/posts/paring-down-with-amp/</guid>
      <description>morganwebdev.com This is a post about my experience of simplifying my personal website down to an AMP page. My philosophy was incremental improvement using the validator and lighthouse test audits as guides. Additionally I added basic service worker functionality with the amp-install-serviceworker tag.
The result is an excellent lighthouse score and a pretty excellent WebPageTest score on Core Web Vitals:
I followed a number of steps to achieve this namely size bounding and inlining CSS and using the excellent Super Tiny Icons Repository</description>
    </item>
    
  </channel>
</rss>
